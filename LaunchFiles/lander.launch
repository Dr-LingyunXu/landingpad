<launch>
	<arg name="fcu_url" default="serial:///dev/ttyACM0:921600" />
	<arg name="gcs_url" default="udp://:14556@192.168.0.105:14550" />
	<arg name="tgt_system" default="1" />
	<arg name="tgt_component" default="50" />


    <arg name="camera_serial" default="0" />
    <arg name="calibrated" default="0" />

 
<!-- 	<node name="camera" pkg="usb_cam" type="usb_cam_node">
        <param name="video_device" value="/dev/video0" />
        <param name="image_width" value="800" />
        <param name="image_height" value="600" />
        <param name="pixel_format" value="mjpeg" />
	<param name="framerate" value="30" />
        <param name="camera_frame_id" value="webcam" />
    </node>
 -->
    <group ns="camera">
        <node pkg="nodelet" type="nodelet" name="camera_nodelet_manager" args="manager" />

        <node pkg="nodelet" type="nodelet" name="camera_nodelet"
            args="load pointgrey_camera_driver/PointGreyCameraNodelet camera_nodelet_manager" >
            <param name="frame_id" value="camera" />
            <param name="serial" value="$(arg camera_serial)" />
            <param name="video_mode" type="string" value="Format0_Mode5"/>

            <!-- When unspecified, the driver will use the default framerate as given by the
                 camera itself. Use this parameter to override that value for cameras capable of
                 other framerates. -->
            <!-- <param name="frame_rate" value="15" /> -->

            <!-- Use the camera_calibration package to create this file -->
            <param name="camera_info_url" if="$(arg calibrated)"
                   value="file://$(env HOME)/.ros/camera_info/$(arg camera_serial).yaml" />
        </node>

        <node name="image_view" pkg="image_view" type="image_view" respawn="false" output="screen">
            <remap from="image" to="image_raw" />
            <param name="autosize" value="true" />
        </node>
    </group>

 
	<node name="mavros" pkg="mavros" type="mavros_node" output="screen">
		<remap from="mavros/position/vision" to="/msf_core/pose" />
 
		<param name="fcu_url" value="$(arg fcu_url)" />
		<param name="gcs_url" value="$(arg gcs_url)" />
		<param name="target_system_id" value="$(arg tgt_system)" />
		<param name="target_component_id" value="$(arg tgt_component)" />
 
		<rosparam command="load" file="$(find mavros)/launch/px4_blacklist.yaml" />
 
		<!-- enable heartbeat send and reduce timeout -->
		<param name="conn_heartbeat" value="5.0" />
		<param name="conn_timeout" value="10.0" />
		<param name="startup_px4_usb_quirk" value="true" />
		<param name="position/vision/pose_with_covariance" value="true" />
 
	</node>
 
	<node pkg="svo_ros" type="vo" name="svo" clear_params="true" output="screen">
        <param name="cam_topic" value="/camera/image_raw" type="str" />
        <rosparam file="$(find svo_ros)/param/firefly.yaml" />
        <rosparam file="$(find svo_ros)/param/vo_px4.yaml" />
	<param name="accept_console_user_input" value="true" />
	<param name="publish_world_in_cam_frame" value="false" />
	<param name="init_rx" value="3.1415289878" />
 
    </node>
 
    <node name="msf_pose_sensor" pkg="msf_updates" type="pose_sensor" clear_params="true" output="screen">
        <remap from="msf_core/imu_state_input" to="/mavros/imu/data" />
        <remap from="msf_updates/pose_with_covariance_input" to="/svo/pose" />
	<rosparam file="$(find msf_updates)/px4_svo_sensor_fix.yaml"/>
   </node>
 
</launch>